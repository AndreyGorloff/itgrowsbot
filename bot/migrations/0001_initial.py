# Generated by Django 4.2.10 on 2025-04-08 09:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('language', models.CharField(choices=[('ru', 'Russian'), ('en', 'English')], default='ru', max_length=2, verbose_name='Language')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_bot_token', models.CharField(help_text='Token obtained from @BotFather', max_length=255, verbose_name='Telegram Bot Token')),
                ('telegram_channel_id', models.CharField(help_text='Channel ID where posts will be published', max_length=255, verbose_name='Telegram Channel ID')),
                ('openai_api_key', models.CharField(help_text='API key from OpenAI platform', max_length=255, verbose_name='OpenAI API Key')),
                ('is_active', models.BooleanField(default=True, help_text='Only one settings instance can be active', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='settings', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('language', models.CharField(choices=[('ru', 'Russian'), ('en', 'English')], default='ru', max_length=2, verbose_name='Language')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('failed', 'Failed')], default='draft', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published at')),
                ('telegram_message_id', models.IntegerField(blank=True, null=True, verbose_name='Telegram Message ID')),
                ('edited', models.BooleanField(default=False, verbose_name='Edited')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='bot.topic', verbose_name='Topic')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-created_at'],
            },
        ),
    ]
